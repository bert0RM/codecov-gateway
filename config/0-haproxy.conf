#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         stdout format raw daemon debug

    chroot      /var/lib/haproxy
    pidfile     /run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    # daemon

    # turn on stats unix socket
    stats socket ipv4@*:9999 user haproxy group haproxy mode 660 level admin

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    60s
    timeout queue           1m
    timeout connect         30s
    timeout client          2m
    timeout server          2m
    timeout http-keep-alive 20s
    timeout check           20s
    maxconn                 10000

frontend stats
   bind :8404
   stats enable
   stats uri /
   stats refresh 10s


backend be_gateway
    http-request return status 200 content-type "text/plain" string "${BUILD_VERSION} ${BUILD_ID}" if TRUE

backend be_default
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request set-header Host ${CODECOV_DEFAULT_HOST_HEADER}
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    http-response set-header X-DEFAULT true
    server s1 ${CODECOV_DEFAULT_HOST}:${CODECOV_DEFAULT_PORT} check ${CODECOV_DEFAULT_SSL_FLAG}init-addr last,libc,none
